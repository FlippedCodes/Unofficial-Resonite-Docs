/* Protoflux node render */

.PFN tr:nth-child(2n) {
  background-color: transparent;
}

.PFN {
  border-spacing: 0;
  background-color: #11151d;
  color: white;
  width: 256px !important;
  filter: drop-shadow(0 0 0.75rem var(--custom_dropshadow_color));
}

.PFN:hover {
  background-color: #292d1a;
}

.PFN thead {
  background-color: #1a2a36;
}

.PFN tbody tr {
  line-height: 0px;
  height: 32px;
}

.PFN td,
.PFN th,
.PFN tr {
  border: 0px transparent;
  padding: 0px;
}

.PFN-Title,
.PFN-NodeType {
  width: 256px;
  font-family: "Poppins-SemiBold";
  text-align: center;
  height: 48px;
  padding: 0px;
  font-size: 20px;
  line-height: 24px;
}

.PFN-NodeType {
  font-size: 24px;
  padding: 4px;
  height: 24px;
  color: rgba(255, 255, 255, 0.2);
}

.PFN-LabelReferenceTitle {
  font-family: "Poppins-SemiBold";
  font-size: 24px;
  text-align: center;
  line-height: 24px;
  width: 248px;
  padding-top: 2px;
}

.PFN-LabelRight,
.PFN-LabelLeft {
  font-family: "Poppins-SemiBold";
  padding: 0px;
  font-size: 16px;
  background-repeat: no-repeat;
  background-size: 160px 26px;
}

.PFN-LabelRight {
  text-align: right;
  background-position: 100% 50%;
}

.PFN-LabelLeft {
  background-position: 0% 50%;
}

.PFN-LabelReferenceSetNull {
  width: 64px;
  height: 32px;
  border-radius: 16px;
  background-color: #2b2f35;
  text-align: center;
  line-height: 32px;
}

.PFN-LabelReferenceEditor {
  outline: none;
  width: 180px;
  height: 32px;
  font-style: italic;
  background-color: #808080;
  border-radius: 16px;
  text-align: center;
  line-height: 32px;
}

.PFN-LabelReferenceLayout {
  float: left;
}

.PFN-LabelReferenceSetNull:hover {
  background-color: #86888b;
}

.PFN-LabelReferenceEditor:hover {
  background-color: #e1e1e0;
}

.PFN-ConnectorReference {
  width: 8px;
}

.PFN-Connector {
  height: 64px;
  width: 32px;
  background-image: linear-gradient(black, black) !important;
}

/* Color overrides */

.PFN-Boolean {
  --colorConnector: 115, 115, 115;
  --colorLabel: rgba(var(--colorConnector), 0.3);
  fill: rgb(var(--colorConnector), 0.08);
  stroke: rgb(var(--colorConnector));
  background-image: linear-gradient(var(--colorLabel), var(--colorLabel));
}
